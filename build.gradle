plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url "https://api.modrinth.com/maven"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation fabricApi.module("fabric-message-api-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-command-api-v2", project.fabric_version)
    modImplementation fabricApi.module("fabric-events-interaction-v0", project.fabric_version)

    modImplementation fabricApi.module("fabric-models-v0", project.fabric_version)
    modImplementation fabricApi.module("fabric-rendering-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
    modImplementation fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)

    modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
    include "maven.modrinth:midnightlib:${project.midnightlib_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}